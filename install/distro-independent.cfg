# How this file works ?
# + This files contains installation of stuff which are distro independent
# + The install script checks if the directory exists, if not create the directory, cd into it & run the command of that section
# + If you wish to check for something more than a directory you can use %(Pid)s in your path, so directory check will
#   always fail and the command is run. So you can call your own script which can do some complex checks

[pip]
directory = /tmp/owtf-install/pip/%(Pid)s
command = command -v pip2 >/dev/null || { wget https://bootstrap.pypa.io/get-pip.py; sudo python get-pip.py;}

[Httprint]
directory = %(RootDir)s/tools/restricted/httprint
command = wget http://www.net-square.com/_assets/httprint_linux_301.zip; unzip *.zip; rm -f *.zip;
			cp -rf %(RootDir)s/tools/httprint-signatures.txt %(RootDir)s/tools/restricted/httprint/httprint_301/linux

[BIG-IP Decoder]
directory = %(RootDir)s/tools/restricted/decoding/cookies
command = wget http://www.taddong.com/tools/BIG-IP_cookie_decoder.zip; unzip *.zip; rm -f *.zip

[Hoppy]
directory = %(RootDir)s/tools/restricted/hoppy-1.8.1
command = wget --no-check-certificate https://labs.portcullis.co.uk/download/hoppy-1.8.1.tar.bz2; bunzip2 *; tar xvf *; rm -f *.tar 2> /dev/null

[SSL cipher Check]
directory = %(RootDir)s/tools/restricted/ssl/ssl-cipher-check
command = wget http://unspecific.com/ssl/ssl-cipher-check.pl; chmod 700 *

[panoptic]
directory = %(RootDir)s/tools/restricted/Panoptic
command = cd %(RootDir)s/tools/restricted; git clone https://github.com/lightos/Panoptic.git

[DNSpider]
directory = %(RootDir)s/tools/restricted/dnspider
command = wget http://www.agarri.fr/docs/wordlists.tgz; wget http://www.agarri.fr/docs/dnsspider-0.6.py; chmod +x dnsspider-0.6.py; tar zxvf wordlists.tgz; rm wordlists.tgz

[Local CA for Inbound Proxy]
# This directory cannot exist, so the script will always run. Checks for individual ca.crt and folders is present inside
# the script so, it won't be a problem.
directory = /tmp/owtf-install/ca/%(Pid)s
command = sh %(RootDir)s/install/proxy_CA.sh %(RootDir)s

[Database Config]
# This directory cannot exist, so the script will always run. Checks for individual db.cfg is present inside
# the script so, it won't be a problem.
directory = /tmp/owtf-install/db-config/%(Pid)s
command = sh %(RootDir)s/install/db_config_setup.sh %(RootDir)s

[Zest Jars]
directory = /tmp/owtf-install/zest/%(Pid)s
command = if [ ! -f %(RootDir)s/zest/release.hash ]; then { wget https://api.github.com/repos/owtf/owtf-zest-jars/tarball -O zest-jars.tar.gz; tar zxf zest-jars.tar.gz; cd */.; cp -r * %(RootDir)s/zest/; }; else $(cmp --silent $(cat %(RootDir)s/zest/release.hash) $(wget -O- -q https://raw.githubusercontent.com/owtf/owtf-zest-jars/master/release.hash) > /dev/null || { wget https://api.github.com/repos/owtf/owtf-zest-jars/tarball -O zest-jars.tar.gz; tar zxf zest-jars.tar.gz; cd */.; cp -r * %(RootDir)s/zest/; }); fi

[CMS Explorer]
directory = %(RootDir)s/tools/restricted/cms-explorer
command = wget http://cms-explorer.googlecode.com/files/cms-explorer-1.0.tar.bz2; bunzip2 *; tar xvf *; rm -f *.tar 2> /dev/null; sh %(RootDir)s/install/update_convert_cms_explorer_dicts.sh %(RootDir)s

[SVN Digger Dictionaries]
directory = %(RootDir)s/dictionaries/restricted/svndigger
command = wget https://www.netsparker.com/s/research/SVNDigger.zip; unzip *.zip; rm -f *.zip

[Raft Dictionaries]
directory = %(RootDir)s/dictionaries/restricted/raft
command = for file in $(ls %(RootDir)s/dictionaries/fuzzdb/fuzzdb-1.09/Discovery/PredictableRes/ | grep raft); do
			ln -s %(RootDir)s/dictionaries/fuzzdb/fuzzdb-1.09/Discovery/PredictableRes/$file %(RootDir)s/dictionaries/restricted/raft/$file
			done

[Combined Dictionaries]
directory = %(RootDir)s/dictionaries/restricted/combined
command = python2 %(RootDir)s/dictionaries/dict_merger_svndigger_raft.py

# Have to somehow ensure that postgres is running before doing this stuff
# [Vulnerability Database]
# directory = ~/.owtf/db/
# command = python2 %(RootDir)s/scripts/vuln_database.py
